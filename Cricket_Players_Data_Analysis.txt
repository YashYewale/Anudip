import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

file_path = "Sports_Perfromance_analysis.csv"
data = pd.read_csv("Sports_Perfromance_analysis.csv")

data.rename(columns={'index': 'Year'}, inplace=True)
print(data.head())

# Basic Statistics
print(data.describe())

# Data Visualization
# Plotting player performance metrics
plt.figure(figsize=(10, 6))
for player in data.columns[1:]:
    plt.plot(data['Year'], data[player], marker='o', label=player)
plt.xlabel('Year')
plt.ylabel('Performance Metric')
plt.title('Player Performance Over Years')
plt.legend()
plt.grid()
plt.show()

# Correlation Matrix
plt.figure(figsize=(8, 6))
correlation = data.drop(columns=['Year']).corr()
sns.heatmap(correlation, annot=True, cmap='coolwarm')
plt.title('Correlation Matrix of Player Performance')
plt.show()

# Predictive Modeling (Example: Linear Regression)
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression

# Define features and target variable
X = data[['Year']]
y = data['RG Sharma']  # Predicting RG Sharma's performance

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create a linear regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Make predictions
predictions = model.predict(X_test)

# Evaluate the model
from sklearn.metrics import mean_squared_error, r2_score
mse = mean_squared_error(y_test, predictions)
r2 = r2_score(y_test, predictions)

print(f'Mean Squared Error: {mse}')
print(f'R^2 Score: {r2}')

# Calculate total runs scored by RG Sharma
total_runs_rg = data["RG Sharma"].sum()
print("Total runs scored by RG Sharma:", total_runs_rg)

# Compute average runs scored by each player
avg_runs_rg = data["RG Sharma"].mean()
avg_runs_vk = data["V Kohli"].mean()

print("Average runs scored per year:")
print("RG Sharma:", avg_runs_rg)
print("V Kohli:", avg_runs_vk)
